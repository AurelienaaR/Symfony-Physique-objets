<h3>Formulaire de modification de l'élément</h3>

<div class="well">

  {{ form_start(formphysupdate, {'attr': {'class': 'form-horizontal'}}) }}

  {# Les erreurs générales du formulaire. #}
  {{ form_errors(formphysupdate) }}

  {# Génération manuelle et éclatée : #}
  <div class="form-group">
    {# Génération du label. #}
    {{ form_label(formphysupdate.title, "Modification de l'élément", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

    {# Affichage des erreurs pour ce champ précis. #}
    {{ form_errors(formphysupdate.title) }}

    <div class="col-sm-10">
      {# Génération de l'input. #}
      {{ form_widget(formphysupdate.title, {'attr': {'class': 'form-control'}}) }}
    </div>
  

  {# Idem pour un autre champ. #}
 <div class="col-sm-10">
    {{ form_label(formphysupdate.content, "Contenu de l'élément", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(formphysupdate.title) }}
    
      {{ form_widget(formphysupdate.content, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>
<div class="form-group">
<div class="col-sm-10">
  {{ form_row(formphysupdate.author) }}
</div>
  {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
  {{ form_widget(formphysupdate.save, {'attr': {'class': 'btn btn-primary'}}) }}

  {# Génération automatique des champs pas encore écrits.
     Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
     et tous les champs cachés (type « hidden »). #}
<div class="col-sm-10">
  {{ form_rest(formphysupdate) }}
</div>
  {# Fermeture de la balise <form> du formulaire HTML #}
  {{ form_end(formphysupdate) }}

</div>
</div>

{# On charge la bibliothèque jQuery. Ici, depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
{#
<script src="bundles/sitephysphysmvc/js/jquery-3.1.1.min.js"></script>
#}
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#advert_categories');

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_category').click(function(e) {
      addCategory($container);

      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addCategory($container);
    } else {
      // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire CategoryType
    function addCategory($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var template = $container.attr('data-prototype')
        .replace(/__name__label__/g, 'Catégorie n°' + (index+1))
        .replace(/__name__/g,        index)
      ;

      // On crée un objet jquery qui contient ce template
      var $prototype = $(template);

      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
      $deleteLink.click(function(e) {
        $prototype.remove();

        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>


